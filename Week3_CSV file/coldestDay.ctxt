#BlueJ class context
comment0.params=parser
comment0.target=org.apache.commons.csv.CSVRecord\ coldestHourInFile(org.apache.commons.csv.CSVParser)
comment1.params=
comment1.target=void\ testcoldestHourInFile()
comment10.params=
comment10.target=org.apache.commons.csv.CSVRecord\ coldestInYear()
comment11.params=
comment11.target=void\ testcoldestInYear()
comment12.params=
comment12.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInYear()
comment13.params=
comment13.target=void\ testlowestHumidityInYear()
comment14.params=currentRow\ coldestSoFar
comment14.target=org.apache.commons.csv.CSVRecord\ getColdestOfTwo(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment15.params=currentRow\ lowestHumiditySoFar
comment15.target=org.apache.commons.csv.CSVRecord\ getLowestOfTwo(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment2.params=
comment2.target=java.lang.String\ fileWithColdestTemperature()
comment3.params=
comment3.target=void\ testFileWithColdestTemperature()
comment4.params=parser
comment4.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment5.params=
comment5.target=void\ testLowestHumidityInFile()
comment6.params=parser
comment6.target=double\ averageTemperatureInFile(org.apache.commons.csv.CSVParser)
comment7.params=
comment7.target=void\ testAverageTemperatureInFile()
comment8.params=parser\ value
comment8.target=double\ averageTemperatureWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ int)
comment9.params=
comment9.target=void\ testAverageTemperatureWithHighHumidityInFile()
numComments=16
